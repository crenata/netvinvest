{"version":3,"file":"static/js/704.db722c0b.chunk.js","mappings":"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","sources":["../node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts","../node_modules/nostr-tools/node_modules/@noble/hashes/src/_sha2.ts","../node_modules/nostr-tools/node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../node_modules/nostr-tools/node_modules/@scure/bip39/wordlists/english.js","../node_modules/nostr-tools/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts","../node_modules/nostr-tools/node_modules/@scure/base/lib/index.js","../node_modules/nostr-tools/node_modules/@noble/hashes/src/crypto.ts","../node_modules/comlink/src/comlink.ts","../node_modules/nostr-tools/node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/node_modules/@noble/hashes/src/_sha2.ts","../node_modules/nostr-tools/node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts","../node_modules/nostr-tools/node_modules/@scure/base/lib/esm/index.js","../node_modules/nostr-tools/node_modules/@noble/hashes/src/sha256.ts","../node_modules/nostr-tools/node_modules/@scure/bip39/index.js","../node_modules/nostr-tools/node_modules/@noble/hashes/src/sha512.ts","../node_modules/nostr-tools/node_modules/@noble/hashes/src/hmac.ts","../node_modules/nostr-tools/node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/nostr-tools/lib/esm/nostr.mjs","../node_modules/nostr-tools/node_modules/@scure/bip32/index.ts"],"sourcesContent":["declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = {\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n};\n\nconst isoMap = htf.isogenyMap(\n  Fp,\n  [\n    // xNum\n    [\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n      '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n      '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n      '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n      '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n      '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n      '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n      '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n      '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n      '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n      '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n      '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n  ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n);\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n  A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n  B: BigInt('1771'),\n  Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(\n  secp256k1.ProjectivePoint,\n  (scalars: bigint[]) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n  },\n  {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n  }\n);\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Currently completly inconsistent naming:\n// - readable: add, mul, sqr, sqrt, inv, div, pow, eq, sub\n// - unreadable mess: addition, multiply, square, squareRoot, inversion, divide, power, equals, subtract\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\ntype PendingListenersMap = Map<\n  string,\n  (value: WireValue | PromiseLike<WireValue>) => void\n>;\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  const pendingListeners : PendingListenersMap = new Map();\n\n  ep.addEventListener(\"message\", function handleMessage(ev: Event) {\n    const { data } = ev as MessageEvent;\n    if (!data || !data.id) {\n      return;\n    }\n    const resolver = pendingListeners.get(data.id);\n    if (!resolver) {\n      return;\n    }\n\n    try {\n      resolver(data);\n    } finally {\n      pendingListeners.delete(data.id);\n    }\n  });\n\n  return createProxy<T>(ep, pendingListeners, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, new Map(), {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  pendingListeners: PendingListenersMap,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          pendingListeners.clear();\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, pendingListeners, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, pendingListeners, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, pendingListeners, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, pendingListeners, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        pendingListeners,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  pendingListeners: PendingListenersMap,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    pendingListeners.set(id, resolve);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n});\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): SignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => SignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number) {\n      return new Signature(this.r, this.s, recovery);\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): Signature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery); // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash (not message: you need to hash it by yourself).\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param opts `lowS, extraEntropy, prehash`\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): Signature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = ut.createHmacDrbg<Signature>(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\n\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\n\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n\n// We accept hex strings besides Uint8Array for simplicity\nexport type Hex = Uint8Array | string;\n// Very few implementations accept numbers, we do it to ease learning curve\nexport type PrivKey = Hex | bigint;\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// Caching slows it down 2-3x\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  if (hex.length % 2) throw new Error('hex string is invalid: unpadded ' + hex.length);\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// Big Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport const numberToBytesBE = (n: bigint, len: number) =>\n  hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n: bigint, len: number) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n: bigint) => hexToBytes(numberToHexUnpadded(n));\n\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrs.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n// Bit operations\n\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n: bigint, pos: number) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n: bigint, pos: number, value: boolean) =>\n  n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// keys.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nfunction generatePrivateKey() {\n  return bytesToHex(schnorr.utils.randomPrivateKey());\n}\nfunction getPublicKey(privateKey) {\n  return bytesToHex(schnorr.getPublicKey(privateKey));\n}\n\n// event.ts\nimport { schnorr as schnorr2 } from \"@noble/curves/secp256k1\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex2 } from \"@noble/hashes/utils\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\"))\n    p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n    p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at < sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at >= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at > event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at < event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at > sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at <= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at < event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at > event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\n\n// event.ts\nvar Kind = /* @__PURE__ */ ((Kind3) => {\n  Kind3[Kind3[\"Metadata\"] = 0] = \"Metadata\";\n  Kind3[Kind3[\"Text\"] = 1] = \"Text\";\n  Kind3[Kind3[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  Kind3[Kind3[\"Contacts\"] = 3] = \"Contacts\";\n  Kind3[Kind3[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  Kind3[Kind3[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  Kind3[Kind3[\"Repost\"] = 6] = \"Repost\";\n  Kind3[Kind3[\"Reaction\"] = 7] = \"Reaction\";\n  Kind3[Kind3[\"BadgeAward\"] = 8] = \"BadgeAward\";\n  Kind3[Kind3[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  Kind3[Kind3[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  Kind3[Kind3[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  Kind3[Kind3[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  Kind3[Kind3[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  Kind3[Kind3[\"Blank\"] = 255] = \"Blank\";\n  Kind3[Kind3[\"Report\"] = 1984] = \"Report\";\n  Kind3[Kind3[\"ZapRequest\"] = 9734] = \"ZapRequest\";\n  Kind3[Kind3[\"Zap\"] = 9735] = \"Zap\";\n  Kind3[Kind3[\"RelayList\"] = 10002] = \"RelayList\";\n  Kind3[Kind3[\"ClientAuth\"] = 22242] = \"ClientAuth\";\n  Kind3[Kind3[\"BadgeDefinition\"] = 30008] = \"BadgeDefinition\";\n  Kind3[Kind3[\"ProfileBadge\"] = 30009] = \"ProfileBadge\";\n  Kind3[Kind3[\"Article\"] = 30023] = \"Article\";\n  return Kind3;\n})(Kind || {});\nfunction getBlankEvent(kind = 255 /* Blank */) {\n  return {\n    kind,\n    content: \"\",\n    tags: [],\n    created_at: 0\n  };\n}\nfunction finishEvent(t, privateKey) {\n  let event = t;\n  event.pubkey = getPublicKey(privateKey);\n  event.id = getEventHash(event);\n  event.sig = getSignature(event, privateKey);\n  return event;\n}\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([\n    0,\n    evt.pubkey,\n    evt.created_at,\n    evt.kind,\n    evt.tags,\n    evt.content\n  ]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex2(eventHash);\n}\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i = 0; i < event.tags.length; i++) {\n    let tag = event.tags[i];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction verifySignature(event) {\n  try {\n    return schnorr2.verify(event.sig, getEventHash(event), event.pubkey);\n  } catch (err) {\n    return false;\n  }\n}\nfunction signEvent(event, key) {\n  console.warn(\n    \"nostr-tools: `signEvent` is deprecated and will be removed or changed in the future. Please use `getSignature` instead.\"\n  );\n  return getSignature(event, key);\n}\nfunction getSignature(event, key) {\n  return bytesToHex2(schnorr2.sign(getEventHash(event), key));\n}\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    if (!filter.ids.some((prefix) => event.id.startsWith(prefix))) {\n      return false;\n    }\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1)\n    return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    if (!filter.authors.some((prefix) => event.pubkey.startsWith(prefix))) {\n      return false;\n    }\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(\n        ([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1\n      ))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at >= filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i = 0; i < filters.length; i++) {\n    if (matchFilter(filters[i], event))\n      return true;\n  }\n  return false;\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// relay.ts\nvar newListeners = () => ({\n  connect: [],\n  disconnect: [],\n  error: [],\n  notice: [],\n  auth: []\n});\nfunction relayInit(url, options = {}) {\n  let { listTimeout = 3e3, getTimeout = 3e3, countTimeout = 3e3 } = options;\n  var ws;\n  var openSubs = {};\n  var listeners = newListeners();\n  var subListeners = {};\n  var pubListeners = {};\n  var connectionPromise;\n  async function connectRelay() {\n    if (connectionPromise)\n      return connectionPromise;\n    connectionPromise = new Promise((resolve, reject) => {\n      try {\n        ws = new WebSocket(url);\n      } catch (err) {\n        reject(err);\n      }\n      ws.onopen = () => {\n        listeners.connect.forEach((cb) => cb());\n        resolve();\n      };\n      ws.onerror = () => {\n        connectionPromise = void 0;\n        listeners.error.forEach((cb) => cb());\n        reject();\n      };\n      ws.onclose = async () => {\n        connectionPromise = void 0;\n        listeners.disconnect.forEach((cb) => cb());\n      };\n      let incomingMessageQueue = [];\n      let handleNextInterval;\n      ws.onmessage = (e) => {\n        incomingMessageQueue.push(e.data);\n        if (!handleNextInterval) {\n          handleNextInterval = setInterval(handleNext, 0);\n        }\n      };\n      function handleNext() {\n        if (incomingMessageQueue.length === 0) {\n          clearInterval(handleNextInterval);\n          handleNextInterval = null;\n          return;\n        }\n        var json = incomingMessageQueue.shift();\n        if (!json)\n          return;\n        let subid = getSubscriptionId(json);\n        if (subid) {\n          let so = openSubs[subid];\n          if (so && so.alreadyHaveEvent && so.alreadyHaveEvent(getHex64(json, \"id\"), url)) {\n            return;\n          }\n        }\n        try {\n          let data = JSON.parse(json);\n          switch (data[0]) {\n            case \"EVENT\": {\n              let id2 = data[1];\n              let event = data[2];\n              if (validateEvent(event) && openSubs[id2] && (openSubs[id2].skipVerification || verifySignature(event)) && matchFilters(openSubs[id2].filters, event)) {\n                openSubs[id2];\n                (subListeners[id2]?.event || []).forEach((cb) => cb(event));\n              }\n              return;\n            }\n            case \"COUNT\":\n              let id = data[1];\n              let payload = data[2];\n              if (openSubs[id]) {\n                ;\n                (subListeners[id]?.count || []).forEach((cb) => cb(payload));\n              }\n              return;\n            case \"EOSE\": {\n              let id2 = data[1];\n              if (id2 in subListeners) {\n                subListeners[id2].eose.forEach((cb) => cb());\n                subListeners[id2].eose = [];\n              }\n              return;\n            }\n            case \"OK\": {\n              let id2 = data[1];\n              let ok = data[2];\n              let reason = data[3] || \"\";\n              if (id2 in pubListeners) {\n                if (ok)\n                  pubListeners[id2].ok.forEach((cb) => cb());\n                else\n                  pubListeners[id2].failed.forEach((cb) => cb(reason));\n                pubListeners[id2].ok = [];\n                pubListeners[id2].failed = [];\n              }\n              return;\n            }\n            case \"NOTICE\":\n              let notice = data[1];\n              listeners.notice.forEach((cb) => cb(notice));\n              return;\n            case \"AUTH\": {\n              let challenge = data[1];\n              listeners.auth?.forEach((cb) => cb(challenge));\n              return;\n            }\n          }\n        } catch (err) {\n          return;\n        }\n      }\n    });\n    return connectionPromise;\n  }\n  function connected() {\n    return ws?.readyState === 1;\n  }\n  async function connect() {\n    if (connected())\n      return;\n    await connectRelay();\n  }\n  async function trySend(params) {\n    let msg = JSON.stringify(params);\n    if (!connected()) {\n      await new Promise((resolve) => setTimeout(resolve, 1e3));\n      if (!connected()) {\n        return;\n      }\n    }\n    try {\n      ws.send(msg);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const sub = (filters, {\n    verb = \"REQ\",\n    skipVerification = false,\n    alreadyHaveEvent = null,\n    id = Math.random().toString().slice(2)\n  } = {}) => {\n    let subid = id;\n    openSubs[subid] = {\n      id: subid,\n      filters,\n      skipVerification,\n      alreadyHaveEvent\n    };\n    trySend([verb, subid, ...filters]);\n    return {\n      sub: (newFilters, newOpts = {}) => sub(newFilters || filters, {\n        skipVerification: newOpts.skipVerification || skipVerification,\n        alreadyHaveEvent: newOpts.alreadyHaveEvent || alreadyHaveEvent,\n        id: subid\n      }),\n      unsub: () => {\n        delete openSubs[subid];\n        delete subListeners[subid];\n        trySend([\"CLOSE\", subid]);\n      },\n      on: (type, cb) => {\n        subListeners[subid] = subListeners[subid] || {\n          event: [],\n          count: [],\n          eose: []\n        };\n        subListeners[subid][type].push(cb);\n      },\n      off: (type, cb) => {\n        let listeners2 = subListeners[subid];\n        let idx = listeners2[type].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type].splice(idx, 1);\n      }\n    };\n  };\n  function _publishEvent(event, type) {\n    if (!event.id)\n      throw new Error(`event ${event} has no id`);\n    let id = event.id;\n    trySend([type, event]);\n    return {\n      on: (type2, cb) => {\n        pubListeners[id] = pubListeners[id] || {\n          ok: [],\n          failed: []\n        };\n        pubListeners[id][type2].push(cb);\n      },\n      off: (type2, cb) => {\n        let listeners2 = pubListeners[id];\n        if (!listeners2)\n          return;\n        let idx = listeners2[type2].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type2].splice(idx, 1);\n      }\n    };\n  }\n  return {\n    url,\n    sub,\n    on: (type, cb) => {\n      listeners[type].push(cb);\n      if (type === \"connect\" && ws?.readyState === 1) {\n        ;\n        cb();\n      }\n    },\n    off: (type, cb) => {\n      let index = listeners[type].indexOf(cb);\n      if (index !== -1)\n        listeners[type].splice(index, 1);\n    },\n    list: (filters, opts) => new Promise((resolve) => {\n      let s = sub(filters, opts);\n      let events = [];\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(events);\n      }, listTimeout);\n      s.on(\"eose\", () => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(events);\n      });\n      s.on(\"event\", (event) => {\n        events.push(event);\n      });\n    }),\n    get: (filter, opts) => new Promise((resolve) => {\n      let s = sub([filter], opts);\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(null);\n      }, getTimeout);\n      s.on(\"event\", (event) => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(event);\n      });\n    }),\n    count: (filters) => new Promise((resolve) => {\n      let s = sub(filters, { ...sub, verb: \"COUNT\" });\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(null);\n      }, countTimeout);\n      s.on(\"count\", (event) => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(event);\n      });\n    }),\n    publish(event) {\n      return _publishEvent(event, \"EVENT\");\n    },\n    auth(event) {\n      return _publishEvent(event, \"AUTH\");\n    },\n    connect,\n    close() {\n      listeners = newListeners();\n      subListeners = {};\n      pubListeners = {};\n      if (ws.readyState === WebSocket.OPEN) {\n        ws?.close();\n      }\n    },\n    get status() {\n      return ws?.readyState ?? 3;\n    }\n  };\n}\n\n// pool.ts\nvar SimplePool = class {\n  _conn;\n  _seenOn = {};\n  eoseSubTimeout;\n  getTimeout;\n  constructor(options = {}) {\n    this._conn = {};\n    this.eoseSubTimeout = options.eoseSubTimeout || 3400;\n    this.getTimeout = options.getTimeout || 3400;\n  }\n  close(relays) {\n    relays.forEach((url) => {\n      let relay = this._conn[normalizeURL(url)];\n      if (relay)\n        relay.close();\n    });\n  }\n  async ensureRelay(url) {\n    const nm = normalizeURL(url);\n    if (!this._conn[nm]) {\n      this._conn[nm] = relayInit(nm, {\n        getTimeout: this.getTimeout * 0.9,\n        listTimeout: this.getTimeout * 0.9\n      });\n    }\n    const relay = this._conn[nm];\n    await relay.connect();\n    return relay;\n  }\n  sub(relays, filters, opts) {\n    let _knownIds = /* @__PURE__ */ new Set();\n    let modifiedOpts = { ...opts || {} };\n    modifiedOpts.alreadyHaveEvent = (id, url) => {\n      if (opts?.alreadyHaveEvent?.(id, url)) {\n        return true;\n      }\n      let set = this._seenOn[id] || /* @__PURE__ */ new Set();\n      set.add(url);\n      this._seenOn[id] = set;\n      return _knownIds.has(id);\n    };\n    let subs = [];\n    let eventListeners = /* @__PURE__ */ new Set();\n    let eoseListeners = /* @__PURE__ */ new Set();\n    let eosesMissing = relays.length;\n    let eoseSent = false;\n    let eoseTimeout = setTimeout(() => {\n      eoseSent = true;\n      for (let cb of eoseListeners.values())\n        cb();\n    }, this.eoseSubTimeout);\n    relays.forEach(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n      } catch (err) {\n        handleEose();\n        return;\n      }\n      if (!r)\n        return;\n      let s = r.sub(filters, modifiedOpts);\n      s.on(\"event\", (event) => {\n        _knownIds.add(event.id);\n        for (let cb of eventListeners.values())\n          cb(event);\n      });\n      s.on(\"eose\", () => {\n        if (eoseSent)\n          return;\n        handleEose();\n      });\n      subs.push(s);\n      function handleEose() {\n        eosesMissing--;\n        if (eosesMissing === 0) {\n          clearTimeout(eoseTimeout);\n          for (let cb of eoseListeners.values())\n            cb();\n        }\n      }\n    });\n    let greaterSub = {\n      sub(filters2, opts2) {\n        subs.forEach((sub) => sub.sub(filters2, opts2));\n        return greaterSub;\n      },\n      unsub() {\n        subs.forEach((sub) => sub.unsub());\n      },\n      on(type, cb) {\n        if (type === \"event\") {\n          eventListeners.add(cb);\n        } else if (type === \"eose\") {\n          eoseListeners.add(cb);\n        }\n      },\n      off(type, cb) {\n        if (type === \"event\") {\n          eventListeners.delete(cb);\n        } else if (type === \"eose\")\n          eoseListeners.delete(cb);\n      }\n    };\n    return greaterSub;\n  }\n  get(relays, filter, opts) {\n    return new Promise((resolve) => {\n      let sub = this.sub(relays, [filter], opts);\n      let timeout = setTimeout(() => {\n        sub.unsub();\n        resolve(null);\n      }, this.getTimeout);\n      sub.on(\"event\", (event) => {\n        resolve(event);\n        clearTimeout(timeout);\n        sub.unsub();\n      });\n    });\n  }\n  list(relays, filters, opts) {\n    return new Promise((resolve) => {\n      let events = [];\n      let sub = this.sub(relays, filters, opts);\n      sub.on(\"event\", (event) => {\n        events.push(event);\n      });\n      sub.on(\"eose\", () => {\n        sub.unsub();\n        resolve(events);\n      });\n    });\n  }\n  publish(relays, event) {\n    const pubPromises = relays.map(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n        return r.publish(event);\n      } catch (_) {\n        return { on() {\n        }, off() {\n        } };\n      }\n    });\n    const callbackMap = /* @__PURE__ */ new Map();\n    return {\n      on(type, cb) {\n        relays.forEach(async (relay, i) => {\n          let pub = await pubPromises[i];\n          let callback = () => cb(relay);\n          callbackMap.set(cb, callback);\n          pub.on(type, callback);\n        });\n      },\n      off(type, cb) {\n        relays.forEach(async (_, i) => {\n          let callback = callbackMap.get(cb);\n          if (callback) {\n            let pub = await pubPromises[i];\n            pub.off(type, callback);\n          }\n        });\n      }\n    };\n  }\n  seenOn(id) {\n    return Array.from(this._seenOn[id]?.values?.() || []);\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  decode: () => decode,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nrelayEncode: () => nrelayEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex3, concatBytes, hexToBytes } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex3(tlv[2][0]) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex3(tlv[2][0]),\n          kind: parseInt(bytesToHex3(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nrelay\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nrelay\");\n      return {\n        type: \"nrelay\",\n        data: utf8Decoder.decode(tlv[0][0])\n      };\n    }\n    case \"nsec\":\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex3(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      continue;\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(hex) {\n  return encodeBytes(\"nsec\", hex);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hex);\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hex);\n}\nfunction encodeBytes(prefix, hex) {\n  let data = hexToBytes(hex);\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nprofile\", words, Bech32MaxSize);\n}\nfunction neventEncode(event) {\n  let data = encodeTLV({\n    0: [hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes(event.author)] : []\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nevent\", words, Bech32MaxSize);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"naddr\", words, Bech32MaxSize);\n}\nfunction nrelayEncode(url) {\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(url)]\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nrelay\", words, Bech32MaxSize);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { base64 } from \"@scure/base\";\nif (typeof crypto !== \"undefined\" && !crypto.subtle && crypto.webcrypto) {\n  crypto.subtle = crypto.webcrypto.subtle;\n}\nasync function encrypt(privkey, pubkey, text) {\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"encrypt\"]\n  );\n  let ciphertext = await crypto.subtle.encrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    plaintext\n  );\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(privkey, pubkey, data) {\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"decrypt\"]\n  );\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    ciphertext\n  );\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w.-]+)$/;\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [_, name = \"_\", domain] = match;\n  try {\n    const res = await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`);\n    const { names, relays } = parseNIP05Result(await res.json());\n    const pubkey = names[name];\n    return pubkey ? { pubkey, relays: relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nfunction parseNIP05Result(json) {\n  const result = {\n    names: {}\n  };\n  for (const [name, pubkey] of Object.entries(json.names)) {\n    if (typeof name === \"string\" && typeof pubkey === \"string\") {\n      result.names[name] = pubkey;\n    }\n  }\n  if (json.relays) {\n    result.relays = {};\n    for (const [pubkey, relays] of Object.entries(json.relays)) {\n      if (typeof pubkey === \"string\" && Array.isArray(relays)) {\n        result.relays[pubkey] = relays.filter((relay) => typeof relay === \"string\");\n      }\n    }\n  }\n  return result;\n}\n\n// nip06.ts\nvar nip06_exports = {};\n__export(nip06_exports, {\n  generateSeedWords: () => generateSeedWords,\n  privateKeyFromSeedWords: () => privateKeyFromSeedWords,\n  validateWords: () => validateWords\n});\nimport { bytesToHex as bytesToHex4 } from \"@noble/hashes/utils\";\nimport { wordlist } from \"@scure/bip39/wordlists/english.js\";\nimport {\n  generateMnemonic,\n  mnemonicToSeedSync,\n  validateMnemonic\n} from \"@scure/bip39\";\nimport { HDKey } from \"@scure/bip32\";\nfunction privateKeyFromSeedWords(mnemonic, passphrase) {\n  let root = HDKey.fromMasterSeed(mnemonicToSeedSync(mnemonic, passphrase));\n  let privateKey = root.derive(`m/44'/1237'/0'/0/0`).privateKey;\n  if (!privateKey)\n    throw new Error(\"could not derive private key\");\n  return bytesToHex4(privateKey);\n}\nfunction generateSeedWords() {\n  return generateMnemonic(wordlist);\n}\nfunction validateWords(words) {\n  return validateMnemonic(words, wordlist);\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: []\n  };\n  const eTags = [];\n  for (const tag of event.tags) {\n    if (tag[0] === \"e\" && tag[1]) {\n      eTags.push(tag);\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n    }\n  }\n  for (let eTagIndex = 0; eTagIndex < eTags.length; eTagIndex++) {\n    const eTag = eTags[eTagIndex];\n    const [_, eTagEventId, eTagRelayUrl, eTagMarker] = eTag;\n    const eventPointer = {\n      id: eTagEventId,\n      relays: eTagRelayUrl ? [eTagRelayUrl] : []\n    };\n    const isFirstETag = eTagIndex === 0;\n    const isLastETag = eTagIndex === eTags.length - 1;\n    if (eTagMarker === \"root\") {\n      result.root = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"reply\") {\n      result.reply = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"mention\") {\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (isFirstETag) {\n      result.root = eventPointer;\n      continue;\n    }\n    if (isLastETag) {\n      result.reply = eventPointer;\n      continue;\n    }\n    result.mentions.push(eventPointer);\n  }\n  return result;\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  getPow: () => getPow\n});\nimport { hexToBytes as hexToBytes2 } from \"@noble/hashes/utils\";\nfunction getPow(id) {\n  return getLeadingZeroBits(hexToBytes2(id));\n}\nfunction getLeadingZeroBits(hash) {\n  let total, i, bits;\n  for (i = 0, total = 0; i < hash.length; i++) {\n    bits = msb(hash[i]);\n    total += bits;\n    if (bits !== 8) {\n      break;\n    }\n  }\n  return total;\n}\nfunction msb(b) {\n  let n = 0;\n  if (b === 0) {\n    return 8;\n  }\n  while (b >>= 1) {\n    n++;\n  }\n  return 7 - n;\n}\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  return finishEvent({\n    kind: 6 /* Repost */,\n    tags: [\n      ...t.tags ?? [],\n      [\"e\", reposted.id, relayUrl],\n      [\"p\", reposted.pubkey]\n    ],\n    content: t.content === \"\" ? \"\" : JSON.stringify(reposted),\n    created_at: t.created_at\n  }, privateKey);\n}\nfunction getRepostedEventPointer(event) {\n  if (event.kind !== 6 /* Repost */) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i = event.tags.length - 1; i >= 0 && (lastETag === void 0 || lastPTag === void 0); i--) {\n    const tag = event.tags[i];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifySignature(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter(\n    (tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\")\n  );\n  return finishEvent({\n    ...t,\n    kind: 7 /* Reaction */,\n    tags: [\n      ...t.tags ?? [],\n      ...inheritedTags,\n      [\"e\", reacted.id],\n      [\"p\", reacted.pubkey]\n    ],\n    content: t.content ?? \"+\"\n  }, privateKey);\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== 7 /* Reaction */) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i = event.tags.length - 1; i >= 0 && (lastETag === void 0 || lastPTag === void 0); i--) {\n    const tag = event.tags[i];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip26.ts\nvar nip26_exports = {};\n__export(nip26_exports, {\n  createDelegation: () => createDelegation,\n  getDelegator: () => getDelegator\n});\nimport { schnorr as schnorr3 } from \"@noble/curves/secp256k1\";\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction createDelegation(privateKey, parameters) {\n  let conditions = [];\n  if ((parameters.kind || -1) >= 0)\n    conditions.push(`kind=${parameters.kind}`);\n  if (parameters.until)\n    conditions.push(`created_at<${parameters.until}`);\n  if (parameters.since)\n    conditions.push(`created_at>${parameters.since}`);\n  let cond = conditions.join(\"&\");\n  if (cond === \"\")\n    throw new Error(\"refusing to create a delegation without any conditions\");\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${parameters.pubkey}:${cond}`)\n  );\n  let sig = bytesToHex5(\n    schnorr3.sign(sighash, privateKey)\n  );\n  return {\n    from: getPublicKey(privateKey),\n    to: parameters.pubkey,\n    cond,\n    sig\n  };\n}\nfunction getDelegator(event) {\n  let tag = event.tags.find((tag2) => tag2[0] === \"delegation\" && tag2.length >= 4);\n  if (!tag)\n    return null;\n  let pubkey = tag[1];\n  let cond = tag[2];\n  let sig = tag[3];\n  let conditions = cond.split(\"&\");\n  for (let i = 0; i < conditions.length; i++) {\n    let [key, operator, value] = conditions[i].split(/\\b/);\n    if (key === \"kind\" && operator === \"=\" && event.kind === parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \"<\" && event.created_at < parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \">\" && event.created_at > parseInt(value))\n      continue;\n    else\n      return null;\n  }\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${event.pubkey}:${cond}`)\n  );\n  if (!schnorr3.verify(sig, sighash, pubkey))\n    return null;\n  return pubkey;\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar regex = () => new RegExp(`\\\\b${NOSTR_URI_REGEX.source}\\\\b`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    const [uri, value] = match;\n    yield {\n      uri,\n      value,\n      decoded: decode(value),\n      start: match.index,\n      end: match.index + uri.length\n    };\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (uri, value) => {\n    return replacer({\n      uri,\n      value,\n      decoded: decode(value)\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation2,\n  validateGithub: () => validateGithub\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch2(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  authenticate: () => authenticate\n});\nvar authenticate = async ({\n  challenge,\n  relay,\n  sign\n}) => {\n  const e = {\n    kind: 22242 /* ClientAuth */,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relay.url],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n  const pub = relay.auth(await sign(e));\n  return new Promise((resolve, reject) => {\n    pub.on(\"ok\", function ok() {\n      pub.off(\"ok\", ok);\n      resolve();\n    });\n    pub.on(\"failed\", function fail(reason) {\n      pub.off(\"failed\", fail);\n      reject(reason);\n    });\n  });\n};\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation3,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = `https://${domain}/.well-known/lnurlp/${name}`;\n    } else {\n      return null;\n    }\n    let res = await _fetch3(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifySignature(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(\n    ([t]) => t === \"e\" || t === \"p\" || t === \"a\"\n  );\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [\n      ...tagsFromZapRequest,\n      [\"bolt11\", bolt11],\n      [\"description\", zapRequest]\n    ]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\nexport {\n  Kind,\n  SimplePool,\n  finishEvent,\n  fakejson_exports as fj,\n  generatePrivateKey,\n  getBlankEvent,\n  getEventHash,\n  getPublicKey,\n  getSignature,\n  matchFilter,\n  matchFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip06_exports as nip06,\n  nip10_exports as nip10,\n  nip13_exports as nip13,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip26_exports as nip26,\n  nip27_exports as nip27,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip57_exports as nip57,\n  parseReferences,\n  relayInit,\n  serializeEvent,\n  signEvent,\n  utils_exports as utils,\n  validateEvent,\n  verifySignature\n};\n","/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { mod } from '@noble/curves/abstract/modular';\nimport { base58check as base58checker } from '@scure/base';\n\nconst Point = secp.ProjectivePoint;\nconst base58check = base58checker(sha256);\n\nfunction bytesToNumber(bytes: Uint8Array): bigint {\n  return BigInt(`0x${bytesToHex(bytes)}`);\n}\n\nfunction numberToBytes(num: bigint): Uint8Array {\n  return hexToBytes(num.toString(16).padStart(64, '0'));\n}\n\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\n// Bitcoin hardcoded by default\nconst BITCOIN_VERSIONS: Versions = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET: number = 0x80000000;\n\nexport interface Versions {\n  private: number;\n  public: number;\n}\n\nconst hash160 = (data: Uint8Array) => ripemd160(sha256(data));\nconst fromU32 = (data: Uint8Array) => createView(data).getUint32(0, false);\nconst toU32 = (n: number) => {\n  if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n    throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n  }\n  const buf = new Uint8Array(4);\n  createView(buf).setUint32(0, n, false);\n  return buf;\n};\n\ninterface HDKeyOpt {\n  versions: Versions;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: number;\n  chainCode: Uint8Array;\n  publicKey?: Uint8Array;\n  privateKey?: Uint8Array | bigint;\n}\n\nexport class HDKey {\n  get fingerprint(): number {\n    if (!this.pubHash) {\n      throw new Error('No publicKey set!');\n    }\n    return fromU32(this.pubHash);\n  }\n  get identifier(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get pubKeyHash(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get privateKey(): Uint8Array | null {\n    return this.privKeyBytes || null;\n  }\n  get publicKey(): Uint8Array | null {\n    return this.pubKey || null;\n  }\n  get privateExtendedKey(): string {\n    const priv = this.privateKey;\n    if (!priv) {\n      throw new Error('No private key');\n    }\n    return base58check.encode(\n      this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv))\n    );\n  }\n  get publicExtendedKey(): string {\n    if (!this.pubKey) {\n      throw new Error('No public key');\n    }\n    return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n  }\n\n  public static fromMasterSeed(seed: Uint8Array, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    assertBytes(seed);\n    if (8 * seed.length < 128 || 8 * seed.length > 512) {\n      throw new Error(\n        `HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`\n      );\n    }\n    const I = hmac(sha512, MASTER_SECRET, seed);\n    return new HDKey({\n      versions,\n      chainCode: I.slice(32),\n      privateKey: I.slice(0, 32),\n    });\n  }\n\n  public static fromExtendedKey(base58key: string, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    const keyBuffer: Uint8Array = base58check.decode(base58key);\n    const keyView = createView(keyBuffer);\n    const version = keyView.getUint32(0, false);\n    const opt = {\n      versions,\n      depth: keyBuffer[4],\n      parentFingerprint: keyView.getUint32(5, false),\n      index: keyView.getUint32(9, false),\n      chainCode: keyBuffer.slice(13, 45),\n    };\n    const key = keyBuffer.slice(45);\n    const isPriv = key[0] === 0;\n    if (version !== versions[isPriv ? 'private' : 'public']) {\n      throw new Error('Version mismatch');\n    }\n    if (isPriv) {\n      return new HDKey({ ...opt, privateKey: key.slice(1) });\n    } else {\n      return new HDKey({ ...opt, publicKey: key });\n    }\n  }\n\n  public static fromJSON(json: { xpriv: string }): HDKey {\n    return HDKey.fromExtendedKey(json.xpriv);\n  }\n  public readonly versions: Versions;\n  public readonly depth: number = 0;\n  public readonly index: number = 0;\n  public readonly chainCode: Uint8Array | null = null;\n  public readonly parentFingerprint: number = 0;\n  private privKey?: bigint;\n  private privKeyBytes?: Uint8Array;\n  private pubKey?: Uint8Array;\n  private pubHash: Uint8Array | undefined;\n\n  constructor(opt: HDKeyOpt) {\n    if (!opt || typeof opt !== 'object') {\n      throw new Error('HDKey.constructor must not be called directly');\n    }\n    this.versions = opt.versions || BITCOIN_VERSIONS;\n    this.depth = opt.depth || 0;\n    this.chainCode = opt.chainCode;\n    this.index = opt.index || 0;\n    this.parentFingerprint = opt.parentFingerprint || 0;\n    if (!this.depth) {\n      if (this.parentFingerprint || this.index) {\n        throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n      }\n    }\n    if (opt.publicKey && opt.privateKey) {\n      throw new Error('HDKey: publicKey and privateKey at same time.');\n    }\n    if (opt.privateKey) {\n      if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n        throw new Error('Invalid private key');\n      }\n      this.privKey =\n        typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n      this.privKeyBytes = numberToBytes(this.privKey);\n      this.pubKey = secp.getPublicKey(opt.privateKey, true);\n    } else if (opt.publicKey) {\n      this.pubKey = Point.fromHex(opt.publicKey).toRawBytes(true); // force compressed point\n    } else {\n      throw new Error('HDKey: no public or private key provided');\n    }\n    this.pubHash = hash160(this.pubKey);\n  }\n\n  public derive(path: string): HDKey {\n    if (!/^[mM]'?/.test(path)) {\n      throw new Error('Path must start with \"m\" or \"M\"');\n    }\n    if (/^[mM]'?$/.test(path)) {\n      return this;\n    }\n    const parts = path.replace(/^[mM]'?\\//, '').split('/');\n    // tslint:disable-next-line\n    let child: HDKey = this;\n    for (const c of parts) {\n      const m = /^(\\d+)('?)$/.exec(c);\n      if (!m || m.length !== 3) {\n        throw new Error(`Invalid child index: ${c}`);\n      }\n      let idx = +m[1];\n      if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n        throw new Error('Invalid index');\n      }\n      // hardened key\n      if (m[2] === \"'\") {\n        idx += HARDENED_OFFSET;\n      }\n      child = child.deriveChild(idx);\n    }\n    return child;\n  }\n\n  public deriveChild(index: number): HDKey {\n    if (!this.pubKey || !this.chainCode) {\n      throw new Error('No publicKey or chainCode set');\n    }\n    let data = toU32(index);\n    if (index >= HARDENED_OFFSET) {\n      // Hardened\n      const priv = this.privateKey;\n      if (!priv) {\n        throw new Error('Could not derive hardened child key');\n      }\n      // Hardened child: 0x00 || ser256(kpar) || ser32(index)\n      data = concatBytes(new Uint8Array([0]), priv, data);\n    } else {\n      // Normal child: serP(point(kpar)) || ser32(index)\n      data = concatBytes(this.pubKey, data);\n    }\n    const I = hmac(sha512, this.chainCode, data);\n    const childTweak = bytesToNumber(I.slice(0, 32));\n    const chainCode = I.slice(32);\n    if (!secp.utils.isValidPrivateKey(childTweak)) {\n      throw new Error('Tweak bigger than curve order');\n    }\n    const opt: HDKeyOpt = {\n      versions: this.versions,\n      chainCode,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n      index,\n    };\n    try {\n      // Private parent key -> private child key\n      if (this.privateKey) {\n        const added = mod(this.privKey! + childTweak, secp.CURVE.n);\n        if (!secp.utils.isValidPrivateKey(added)) {\n          throw new Error('The tweak was out of range or the resulted private key is invalid');\n        }\n        opt.privateKey = added;\n      } else {\n        const added = Point.fromHex(this.pubKey).add(Point.fromPrivateKey(childTweak));\n        // Cryptographically impossible: hmac-sha512 preimage would need to be found\n        if (added.equals(Point.ZERO)) {\n          throw new Error('The tweak was equal to negative P, which made the result key invalid');\n        }\n        opt.publicKey = added.toRawBytes(true);\n      }\n      return new HDKey(opt);\n    } catch (err) {\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  public sign(hash: Uint8Array): Uint8Array {\n    if (!this.privateKey) {\n      throw new Error('No privateKey set!');\n    }\n    assertBytes(hash, 32);\n    return secp.sign(hash, this.privKey!).toCompactRawBytes();\n  }\n\n  public verify(hash: Uint8Array, signature: Uint8Array): boolean {\n    assertBytes(hash, 32);\n    assertBytes(signature, 64);\n    if (!this.publicKey) {\n      throw new Error('No publicKey set!');\n    }\n    let sig;\n    try {\n      sig = secp.Signature.fromCompact(signature);\n    } catch (error) {\n      return false;\n    }\n    return secp.verify(sig, hash, this.publicKey);\n  }\n\n  public wipePrivateData(): this {\n    this.privKey = undefined;\n    if (this.privKeyBytes) {\n      this.privKeyBytes.fill(0);\n      this.privKeyBytes = undefined;\n    }\n    return this;\n  }\n  public toJSON(): { xpriv: string; xpub: string } {\n    return {\n      xpriv: this.privateExtendedKey,\n      xpub: this.publicExtendedKey,\n    };\n  }\n\n  private serialize(version: number, key: Uint8Array) {\n    if (!this.chainCode) {\n      throw new Error('No chainCode set');\n    }\n    assertBytes(key, 33);\n    // version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    return concatBytes(\n      toU32(version),\n      new Uint8Array([this.depth]),\n      toU32(this.parentFingerprint),\n      toU32(this.index),\n      this.chainCode,\n      key\n    );\n  }\n}\n"],"names":["crypto","globalThis","undefined","_assert_js_1","require","utils_js_1","SHA2","Hash","constructor","blockLen","outputLen","padOffset","isLE","super","finished","length","pos","destroyed","this","buffer","Uint8Array","view","createView","update","data","default","exists","len","toBytes","take","Math","min","set","subarray","process","dataView","roundClean","digestInto","out","output","fill","i","byteOffset","value","setBigUint64","_32n","BigInt","_u32_max","wh","Number","wl","h","l","setUint32","oview","Error","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","exports","number","n","isSafeInteger","bytes","b","TypeError","_len","arguments","lengths","Array","_key","includes","assert","bool","hash","create","instance","checkFinished","_0n","_1n","wNAF","c","bits","constTimeNegate","condition","item","neg","negate","opts","W","windows","ceil","windowSize","unsafeLadder","elm","p","ZERO","d","add","double","precomputeWindow","points","base","window","push","precomputes","f","BASE","mask","maxNumber","shiftBy","offset","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","validateField","Fp","validateObject","Gx","Gy","nBitLength","nByteLength","Object","freeze","nLength","ORDER","secp256k1P","secp256k1N","_2n","divNearest","a","sqrtMod","y","_3n","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","root","eql","sqr","Field","sqrt","secp256k1","createCurve","lowS","endo","beta","splitScalar","k","a1","b1","a2","POW_2_128","c1","c2","k1","mod","k2","k1neg","k2neg","sha256","fe","x","TAGGED_HASH_PREFIXES","taggedHash","tag","tagP","tagH","from","charCodeAt","concatBytes","messages","pointToBytes","point","toRawBytes","numTo32b","numberToBytesBE","modP","modN","Point","ProjectivePoint","schnorrGetExtPubKey","priv","d_","utils","normPrivateKeyToScalar","fromPrivateKey","scalar","hasEvenY","lift_x","xx","assertValidity","challenge","_len2","args","_key2","bytesToNumberBE","schnorrVerify","signature","message","publicKey","sig","ensureBytes","m","pub","r","s","e","R","Q","multiplyAndAddUnsafe","toAffine","error","GmulAdd","schnorr","getPublicKey","privateKey","sign","auxRand","randomBytes","px","t","rand","k_","rx","verify","randomPrivateKey","isoMap","htf","map","j","mapSWU","mapToCurveSimpleSWU","A","B","Z","hashToCurve","encodeToCurve","scalars","DST","encodeDST","expand","Maj","SHA256_K","Uint32Array","IV","SHA256_W","SHA256","C","D","E","F","G","H","getUint32","W15","W2","s0","rotr","s1","T1","T2","Chi","SHA224","wrapConstructor","getHash","hmac","key","msgs","curveDef","defHash","weierstrass","os2ip","i2osp","strxor","arr","isBytes","isNum","hash_to_field","msg","count","options","_DST","dst","utf8ToBytes","validateDST","log2p","toString","L","len_in_bytes","prb","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xmd","dkLen","expand_message_xof","u","elm_offset","tv","isogenyMap","field","COEFF","reverse","xNum","xDen","yNum","yDen","val","reduce","acc","mul","div","createHasher","mapToCurve","def","u0","fromAffine","u1","clearCofactor","split","U32_MASK64","fromBig","lst","le","Ah","Al","toBig","Bh","Bl","u64","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","_4n","_5n","_8n","result","pow","num","power","modulo","invert","v","q","FpSqrt","p1div4","n2","nv","sub","ONE","legendreC","S","Q1div2","g","ge","tonelliShanks","FIELD_FIELDS","MASK","BYTES","BITS","_nBitLength","bitLen","redef","sqrtP","bitMask","isValid","is0","isOdd","lhs","rhs","FpPow","sqrN","addN","subN","mulN","inv","invertBatch","nums","tmp","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","numberToBytesLE","fromBytes","bytesToNumberLE","hashToPrivateScalar","groupOrder","hashLen","minLen","assertNumber","chain","wrap","encode","decode","alphabet","digits","isArray","input","letter","index","indexOf","join","separator","padding","chr","end","normalize","fn","convertRadix","forEach","carry","done","digit","digitBase","floor","defineProperty","stringToBytes","str","bytesToString","hex","utf8","bech32m","bech32","base58check","base58xmr","base58xrp","base58flickr","base58","base64url","base64","base32crockford","base32hex","base32","base16","gcd","radix2carry","convertRadix2","radix","radix2","revPadding","unsafeWrapper","apply","checksum","payload","newChecksum","oldChecksum","toUpperCase","replace","genBase58","abc","XMR_BLOCK_LEN","block","padStart","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","TextEncoder","CODERS","coderTypeError","keys","type","hasOwnProperty","proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","proxyTransferHandler","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","ep","target","pendingListeners","Map","addEventListener","ev","id","resolver","delete","createProxy","transferHandlers","_ref","serialized","isError","name","stack","assign","allowedOrigins","callback","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfers","transferCache","transfer","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","clear","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","prototype","handler","serializedValue","random","MAX_SAFE_INTEGER","DataView","byteLength","word","shift","hexes","bytesToHex","uint8a","hexToBytes","array","hexByte","byte","parseInt","isNaN","arrays","every","pad","clone","hashConstructor","hashC","bytesLength","getRandomValues","b2n","h2b","ut","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","sl","rl","weierstrassPoints","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","validatePointOpts","isCompressed","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","pointPrecomputes","assertPrjPoint","other","py","pz","normalizeZ","toInv","fromHex","multiply","_setWindowSize","left","right","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","X3","Y3","Z3","t0","t3","t4","t5","subtract","wnaf","multiplyUnsafe","I","k1p","k2p","fake","f1p","f2p","iz","z","ax","ay","zz","cofactor","toHex","_bits","bits2int","bits2int_modN","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","invN","cat","head","y2","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","prehash","extraEntropy","ent","h1int","seedArgs","seed","k2sig","kBytes","ik","normS","defaultVerOpts","getSharedSecret","privateA","publicB","privKey","drbg","sg","_sig","derError","is","sqrtRatio","o","c3","c4","c5","c6","c7","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","SWUFpSqrtRatio","tv6","hmac_js_1","pbkdf2Init","_password","_salt","_opts","checkOpts","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","ti","Ti","setInt32","ui","async","asyncLoop","HMAC","iHash","oHash","buf","getPrototypeOf","_sha2_js_1","_assert_1","pbkdf2_1","sha256_1","sha512_1","utils_1","base_1","nfkd","norm","assertEntropy","entropy","wordlist","strength","entropyToMnemonic","calcChecksum","bitsLeft","getCoder","mnemonicToEntropy","mnemonic","isJapanese","passphrase","pbkdf2","sha512","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","Rho","Id","_","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rr","sr","tl","tr","ripemd160","crypto_1","iters","tick","cb","ts","Date","now","diff","nextTick","defaults","call","hashCons","u8a","hexToNumber","title","expectedLength","arrs","u8n","u8fr","createHmacDrbg","qByteLen","hmacFn","reset","reseed","gen","genUntil","pred","validatorFns","bigint","function","boolean","string","object","validators","optValidators","checkField","fieldName","isOptional","checkVal","String","entries","__defProp","__export","all","enumerable","insertEventIntoAscendingList","insertEventIntoDescendingList","normalizeURL","utf8Decoder","utf8Encoder","url","URL","pathname","protocol","searchParams","sort","sortedArray","event","midPoint","position","created_at","finishEvent","pubkey","getEventHash","getSignature","eventHash","evt","validateEvent","JSON","stringify","kind","tags","content","serializeEvent","bytesToHex2","isRecord","match","verifySignature","schnorr2","err","matchFilter","filter","ids","startsWith","kinds","authors","values","find","since","until","getHex64","json","getInt","sliced","getSubscriptionId","pstart","pend","matchEventId","matchEventPubkey","matchEventKind","relayInit","listTimeout","getTimeout","countTimeout","ws","connectionPromise","openSubs","listeners","connect","disconnect","notice","auth","subListeners","pubListeners","connectRelay","reject","WebSocket","onopen","onerror","onclose","handleNextInterval","incomingMessageQueue","handleNext","clearInterval","subid","so","alreadyHaveEvent","parse","id2","skipVerification","filters","matchFilters","eose","ok","reason","failed","onmessage","setInterval","connected","readyState","trySend","params","setTimeout","send","log","verb","newFilters","newOpts","unsub","on","off","listeners2","splice","_publishEvent","type2","list","events","timeout","clearTimeout","publish","OPEN","status","SimplePool","_conn","_seenOn","eoseSubTimeout","relays","relay","ensureRelay","nm","_knownIds","Set","modifiedOpts","has","subs","eventListeners","eoseListeners","eosesMissing","eoseSent","eoseTimeout","handleEose","greaterSub","filters2","opts2","pubPromises","callbackMap","seenOn","BECH32_REGEX","naddrEncode","neventEncode","noteEncode","nprofileEncode","npubEncode","nrelayEncode","nsecEncode","Bech32MaxSize","nip19","tlv","parseTLV","bytesToHex3","author","identifier","rest","encodeBytes","profile","encodeTLV","addr","ArrayBuffer","_ref2","vs","entry","encrypt","privkey","text","normalizedKey","getNormalizedX","iv","plaintext","cryptoKey","subtle","importKey","ciphertext","decrypt","ctb64","ivb64","webcrypto","NIP05_REGEX","queryProfile","searchDomain","useFetchImplementation","_fetch","fetch","fetchImplementation","domain","query","names","fullname","parseNIP05Result","_e","privateKeyFromSeedWords","HDKey","fromMasterSeed","mnemonicToSeedSync","derive","bytesToHex4","generateSeedWords","generateMnemonic","validateWords","validateMnemonic","reply","mentions","profiles","eTags","eTagIndex","eTag","eTagEventId","eTagRelayUrl","eTagMarker","eventPointer","isFirstETag","isLastETag","getPow","total","msb","getLeadingZeroBits","hexToBytes2","finishRepostEvent","reposted","relayUrl","getRepostedEventPointer","lastETag","lastPTag","getRepostedEvent","pointer","repostedEvent","NOSTR_URI_REGEX","parse2","source","uri","decoded","finishReactionEvent","reacted","inheritedTags","getReactedEventPointer","createDelegation","parameters","conditions","cond","sighash","sha2562","bytesToHex5","schnorr3","getDelegator","tag2","operator","matchAll","regex","replaceAll","matches","replacer","_fetch2","useFetchImplementation2","validateGithub","username","proof","authenticate","_fetch3","_ref3","fail","getZapEndpoint","makeZapReceipt","makeZapRequest","useFetchImplementation3","validateZapRequest","metadata","lnurl","lud06","lud16","bech322","body","allowsNostr","nostrPubkey","_ref4","amount","comment","zr","round","zapRequestString","zapRequest","_ref5","_ref6","_ref7","_ref8","preimage","bolt11","paidAt","tagsFromZapRequest","_ref9","zap","getTime","_u64_js_1","secp","base58checker","bytesToNumber","MASTER_SECRET","BITCOIN_VERSIONS","private","public","HARDENED_OFFSET","toU32","fingerprint","pubHash","pubKeyHash","privKeyBytes","pubKey","privateExtendedKey","versions","publicExtendedKey","assertBytes","chainCode","fromExtendedKey","base58key","keyBuffer","keyView","version","opt","depth","parentFingerprint","isPriv","fromJSON","xpriv","parts","child","exec","deriveChild","childTweak","added","wipePrivateData","toJSON","xpub"],"sourceRoot":""}